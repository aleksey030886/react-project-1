{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/User/User.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/User/User.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","User","props","className","style","user","active","to","id","name","Message","message","maxLength50","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","usersElements","dialogsPage","users","map","messagesElements","messages","mes","dialogs","values","sendMessageClick","newMessageBody","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,oBCArDD,EAAOC,QAAU,CAAC,QAAU,2B,6GCWbC,EARF,SAACC,GACV,OACI,qBAAKC,UAAS,UAAKC,IAAMC,KAAX,YAAmBD,IAAME,QAAvC,SACI,eAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,UAAsCN,EAAMO,KAA5C,U,kBCIGC,EARC,SAACR,GACb,OACI,qBAAKC,UAAWC,IAAMO,QAAtB,SACI,+BAAOT,EAAMS,a,iCC4BnBC,EAAcC,YAAiB,IAe/BC,EAAmBC,YAAU,CAC/BC,KAAM,wBADeD,EAbL,SAACb,GACjB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,gBAAiBC,SAAU,CAACC,IAAUZ,OAE3G,8BACI,kDAUDa,EA7CC,SAACvB,GAEb,IAIIwB,EAAgBxB,EAAMyB,YAAYC,MAAMC,KAAK,SAAAxB,GAAI,OAAI,cAAC,EAAD,CAAMG,GAAIH,EAAKG,GAAIC,KAAMJ,EAAKI,UACnFqB,EAAmB5B,EAAMyB,YAAYI,SAASF,KAAK,SAAAG,GAAG,OAAI,cAAC,EAAD,CAASxB,GAAIwB,EAAIxB,GAAIG,QAASqB,EAAIrB,aAEhG,OACI,sBAAKR,UAAWC,IAAM6B,QAAtB,UACI,8BACKP,IAEL,gCACI,8BAAMI,IACN,8BACI,cAAChB,EAAD,CAAkBG,SAfjB,SAACiB,GACdhC,EAAMiC,iBAAiBD,EAAOE,4B,uBCUvBC,sBACXC,aAfkB,SAACC,GACnB,MAAM,CACFZ,YAAaY,EAAMZ,gBAIF,SAACa,GACtB,MAAM,CACFL,iBAAkB,SAACC,GACfI,EAASC,YAAyBL,SAMGM,IADlCL,CAEbZ","file":"static/js/4.ff4bb6e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3k6HB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__41UbW\",\"active\":\"User_active__2NXtn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__kDs6q\"};","import React from \"react\";\r\nimport style from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={`${style.user} ${style.active}`}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport style from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from './Dialogs.module.css';\r\nimport User from \"./User/User\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessageClick(values.newMessageBody);\r\n    }\r\n\r\n    let usersElements = props.dialogsPage.users.map( user => <User id={user.id} name={user.name} />);\r\n    let messagesElements = props.dialogsPage.messages.map( mes => <Message id={mes.id} message={mes.message} />);\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div>\r\n                {usersElements}\r\n            </div>\r\n            <div>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <MessageReduxForm onSubmit={onSubmit} />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter message\"} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(MessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/reducer/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessageClick: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}